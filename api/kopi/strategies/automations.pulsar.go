// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package strategies

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Condition                 protoreflect.MessageDescriptor
	fd_Condition_condition_type  protoreflect.FieldDescriptor
	fd_Condition_string1         protoreflect.FieldDescriptor
	fd_Condition_string2         protoreflect.FieldDescriptor
	fd_Condition_comparison      protoreflect.FieldDescriptor
	fd_Condition_value           protoreflect.FieldDescriptor
	fd_Condition_reference_price protoreflect.FieldDescriptor
)

func init() {
	file_kopi_strategies_automations_proto_init()
	md_Condition = File_kopi_strategies_automations_proto.Messages().ByName("Condition")
	fd_Condition_condition_type = md_Condition.Fields().ByName("condition_type")
	fd_Condition_string1 = md_Condition.Fields().ByName("string1")
	fd_Condition_string2 = md_Condition.Fields().ByName("string2")
	fd_Condition_comparison = md_Condition.Fields().ByName("comparison")
	fd_Condition_value = md_Condition.Fields().ByName("value")
	fd_Condition_reference_price = md_Condition.Fields().ByName("reference_price")
}

var _ protoreflect.Message = (*fastReflection_Condition)(nil)

type fastReflection_Condition Condition

func (x *Condition) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Condition)(x)
}

func (x *Condition) slowProtoReflect() protoreflect.Message {
	mi := &file_kopi_strategies_automations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Condition_messageType fastReflection_Condition_messageType
var _ protoreflect.MessageType = fastReflection_Condition_messageType{}

type fastReflection_Condition_messageType struct{}

func (x fastReflection_Condition_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Condition)(nil)
}
func (x fastReflection_Condition_messageType) New() protoreflect.Message {
	return new(fastReflection_Condition)
}
func (x fastReflection_Condition_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Condition
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Condition) Descriptor() protoreflect.MessageDescriptor {
	return md_Condition
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Condition) Type() protoreflect.MessageType {
	return _fastReflection_Condition_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Condition) New() protoreflect.Message {
	return new(fastReflection_Condition)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Condition) Interface() protoreflect.ProtoMessage {
	return (*Condition)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Condition) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ConditionType != int64(0) {
		value := protoreflect.ValueOfInt64(x.ConditionType)
		if !f(fd_Condition_condition_type, value) {
			return
		}
	}
	if x.String1 != "" {
		value := protoreflect.ValueOfString(x.String1)
		if !f(fd_Condition_string1, value) {
			return
		}
	}
	if x.String2 != "" {
		value := protoreflect.ValueOfString(x.String2)
		if !f(fd_Condition_string2, value) {
			return
		}
	}
	if x.Comparison != "" {
		value := protoreflect.ValueOfString(x.Comparison)
		if !f(fd_Condition_comparison, value) {
			return
		}
	}
	if len(x.Value) != 0 {
		value := protoreflect.ValueOfBytes(x.Value)
		if !f(fd_Condition_value, value) {
			return
		}
	}
	if len(x.ReferencePrice) != 0 {
		value := protoreflect.ValueOfBytes(x.ReferencePrice)
		if !f(fd_Condition_reference_price, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Condition) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kopi.strategies.Condition.condition_type":
		return x.ConditionType != int64(0)
	case "kopi.strategies.Condition.string1":
		return x.String1 != ""
	case "kopi.strategies.Condition.string2":
		return x.String2 != ""
	case "kopi.strategies.Condition.comparison":
		return x.Comparison != ""
	case "kopi.strategies.Condition.value":
		return len(x.Value) != 0
	case "kopi.strategies.Condition.reference_price":
		return len(x.ReferencePrice) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Condition"))
		}
		panic(fmt.Errorf("message kopi.strategies.Condition does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Condition) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kopi.strategies.Condition.condition_type":
		x.ConditionType = int64(0)
	case "kopi.strategies.Condition.string1":
		x.String1 = ""
	case "kopi.strategies.Condition.string2":
		x.String2 = ""
	case "kopi.strategies.Condition.comparison":
		x.Comparison = ""
	case "kopi.strategies.Condition.value":
		x.Value = nil
	case "kopi.strategies.Condition.reference_price":
		x.ReferencePrice = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Condition"))
		}
		panic(fmt.Errorf("message kopi.strategies.Condition does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Condition) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kopi.strategies.Condition.condition_type":
		value := x.ConditionType
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Condition.string1":
		value := x.String1
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Condition.string2":
		value := x.String2
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Condition.comparison":
		value := x.Comparison
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Condition.value":
		value := x.Value
		return protoreflect.ValueOfBytes(value)
	case "kopi.strategies.Condition.reference_price":
		value := x.ReferencePrice
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Condition"))
		}
		panic(fmt.Errorf("message kopi.strategies.Condition does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Condition) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kopi.strategies.Condition.condition_type":
		x.ConditionType = value.Int()
	case "kopi.strategies.Condition.string1":
		x.String1 = value.Interface().(string)
	case "kopi.strategies.Condition.string2":
		x.String2 = value.Interface().(string)
	case "kopi.strategies.Condition.comparison":
		x.Comparison = value.Interface().(string)
	case "kopi.strategies.Condition.value":
		x.Value = value.Bytes()
	case "kopi.strategies.Condition.reference_price":
		x.ReferencePrice = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Condition"))
		}
		panic(fmt.Errorf("message kopi.strategies.Condition does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Condition) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.Condition.condition_type":
		panic(fmt.Errorf("field condition_type of message kopi.strategies.Condition is not mutable"))
	case "kopi.strategies.Condition.string1":
		panic(fmt.Errorf("field string1 of message kopi.strategies.Condition is not mutable"))
	case "kopi.strategies.Condition.string2":
		panic(fmt.Errorf("field string2 of message kopi.strategies.Condition is not mutable"))
	case "kopi.strategies.Condition.comparison":
		panic(fmt.Errorf("field comparison of message kopi.strategies.Condition is not mutable"))
	case "kopi.strategies.Condition.value":
		panic(fmt.Errorf("field value of message kopi.strategies.Condition is not mutable"))
	case "kopi.strategies.Condition.reference_price":
		panic(fmt.Errorf("field reference_price of message kopi.strategies.Condition is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Condition"))
		}
		panic(fmt.Errorf("message kopi.strategies.Condition does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Condition) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.Condition.condition_type":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Condition.string1":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Condition.string2":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Condition.comparison":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Condition.value":
		return protoreflect.ValueOfBytes(nil)
	case "kopi.strategies.Condition.reference_price":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Condition"))
		}
		panic(fmt.Errorf("message kopi.strategies.Condition does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Condition) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kopi.strategies.Condition", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Condition) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Condition) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Condition) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Condition) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Condition)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ConditionType != 0 {
			n += 1 + runtime.Sov(uint64(x.ConditionType))
		}
		l = len(x.String1)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.String2)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Comparison)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReferencePrice)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Condition)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ReferencePrice) > 0 {
			i -= len(x.ReferencePrice)
			copy(dAtA[i:], x.ReferencePrice)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReferencePrice)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Comparison) > 0 {
			i -= len(x.Comparison)
			copy(dAtA[i:], x.Comparison)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Comparison)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.String2) > 0 {
			i -= len(x.String2)
			copy(dAtA[i:], x.String2)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.String2)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.String1) > 0 {
			i -= len(x.String1)
			copy(dAtA[i:], x.String1)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.String1)))
			i--
			dAtA[i] = 0x12
		}
		if x.ConditionType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ConditionType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Condition)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Condition: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Condition: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConditionType", wireType)
				}
				x.ConditionType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ConditionType |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field String1", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.String1 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field String2", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.String2 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Comparison", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Comparison = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = append(x.Value[:0], dAtA[iNdEx:postIndex]...)
				if x.Value == nil {
					x.Value = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReferencePrice", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReferencePrice = append(x.ReferencePrice[:0], dAtA[iNdEx:postIndex]...)
				if x.ReferencePrice == nil {
					x.ReferencePrice = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Action                      protoreflect.MessageDescriptor
	fd_Action_action_type          protoreflect.FieldDescriptor
	fd_Action_string1              protoreflect.FieldDescriptor
	fd_Action_string2              protoreflect.FieldDescriptor
	fd_Action_amount               protoreflect.FieldDescriptor
	fd_Action_minimum_trade_amount protoreflect.FieldDescriptor
)

func init() {
	file_kopi_strategies_automations_proto_init()
	md_Action = File_kopi_strategies_automations_proto.Messages().ByName("Action")
	fd_Action_action_type = md_Action.Fields().ByName("action_type")
	fd_Action_string1 = md_Action.Fields().ByName("string1")
	fd_Action_string2 = md_Action.Fields().ByName("string2")
	fd_Action_amount = md_Action.Fields().ByName("amount")
	fd_Action_minimum_trade_amount = md_Action.Fields().ByName("minimum_trade_amount")
}

var _ protoreflect.Message = (*fastReflection_Action)(nil)

type fastReflection_Action Action

func (x *Action) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Action)(x)
}

func (x *Action) slowProtoReflect() protoreflect.Message {
	mi := &file_kopi_strategies_automations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Action_messageType fastReflection_Action_messageType
var _ protoreflect.MessageType = fastReflection_Action_messageType{}

type fastReflection_Action_messageType struct{}

func (x fastReflection_Action_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Action)(nil)
}
func (x fastReflection_Action_messageType) New() protoreflect.Message {
	return new(fastReflection_Action)
}
func (x fastReflection_Action_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Action
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Action) Descriptor() protoreflect.MessageDescriptor {
	return md_Action
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Action) Type() protoreflect.MessageType {
	return _fastReflection_Action_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Action) New() protoreflect.Message {
	return new(fastReflection_Action)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Action) Interface() protoreflect.ProtoMessage {
	return (*Action)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Action) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ActionType != int64(0) {
		value := protoreflect.ValueOfInt64(x.ActionType)
		if !f(fd_Action_action_type, value) {
			return
		}
	}
	if x.String1 != "" {
		value := protoreflect.ValueOfString(x.String1)
		if !f(fd_Action_string1, value) {
			return
		}
	}
	if x.String2 != "" {
		value := protoreflect.ValueOfString(x.String2)
		if !f(fd_Action_string2, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_Action_amount, value) {
			return
		}
	}
	if x.MinimumTradeAmount != "" {
		value := protoreflect.ValueOfString(x.MinimumTradeAmount)
		if !f(fd_Action_minimum_trade_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Action) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kopi.strategies.Action.action_type":
		return x.ActionType != int64(0)
	case "kopi.strategies.Action.string1":
		return x.String1 != ""
	case "kopi.strategies.Action.string2":
		return x.String2 != ""
	case "kopi.strategies.Action.amount":
		return x.Amount != ""
	case "kopi.strategies.Action.minimum_trade_amount":
		return x.MinimumTradeAmount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Action"))
		}
		panic(fmt.Errorf("message kopi.strategies.Action does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kopi.strategies.Action.action_type":
		x.ActionType = int64(0)
	case "kopi.strategies.Action.string1":
		x.String1 = ""
	case "kopi.strategies.Action.string2":
		x.String2 = ""
	case "kopi.strategies.Action.amount":
		x.Amount = ""
	case "kopi.strategies.Action.minimum_trade_amount":
		x.MinimumTradeAmount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Action"))
		}
		panic(fmt.Errorf("message kopi.strategies.Action does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Action) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kopi.strategies.Action.action_type":
		value := x.ActionType
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Action.string1":
		value := x.String1
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Action.string2":
		value := x.String2
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Action.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Action.minimum_trade_amount":
		value := x.MinimumTradeAmount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Action"))
		}
		panic(fmt.Errorf("message kopi.strategies.Action does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kopi.strategies.Action.action_type":
		x.ActionType = value.Int()
	case "kopi.strategies.Action.string1":
		x.String1 = value.Interface().(string)
	case "kopi.strategies.Action.string2":
		x.String2 = value.Interface().(string)
	case "kopi.strategies.Action.amount":
		x.Amount = value.Interface().(string)
	case "kopi.strategies.Action.minimum_trade_amount":
		x.MinimumTradeAmount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Action"))
		}
		panic(fmt.Errorf("message kopi.strategies.Action does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.Action.action_type":
		panic(fmt.Errorf("field action_type of message kopi.strategies.Action is not mutable"))
	case "kopi.strategies.Action.string1":
		panic(fmt.Errorf("field string1 of message kopi.strategies.Action is not mutable"))
	case "kopi.strategies.Action.string2":
		panic(fmt.Errorf("field string2 of message kopi.strategies.Action is not mutable"))
	case "kopi.strategies.Action.amount":
		panic(fmt.Errorf("field amount of message kopi.strategies.Action is not mutable"))
	case "kopi.strategies.Action.minimum_trade_amount":
		panic(fmt.Errorf("field minimum_trade_amount of message kopi.strategies.Action is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Action"))
		}
		panic(fmt.Errorf("message kopi.strategies.Action does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Action) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.Action.action_type":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Action.string1":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Action.string2":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Action.amount":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Action.minimum_trade_amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Action"))
		}
		panic(fmt.Errorf("message kopi.strategies.Action does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Action) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kopi.strategies.Action", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Action) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Action) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Action) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Action) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Action)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ActionType != 0 {
			n += 1 + runtime.Sov(uint64(x.ActionType))
		}
		l = len(x.String1)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.String2)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MinimumTradeAmount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Action)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MinimumTradeAmount) > 0 {
			i -= len(x.MinimumTradeAmount)
			copy(dAtA[i:], x.MinimumTradeAmount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinimumTradeAmount)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.String2) > 0 {
			i -= len(x.String2)
			copy(dAtA[i:], x.String2)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.String2)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.String1) > 0 {
			i -= len(x.String1)
			copy(dAtA[i:], x.String1)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.String1)))
			i--
			dAtA[i] = 0x12
		}
		if x.ActionType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ActionType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Action)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Action: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Action: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ActionType", wireType)
				}
				x.ActionType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ActionType |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field String1", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.String1 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field String2", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.String2 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinimumTradeAmount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinimumTradeAmount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MessageCondition                 protoreflect.MessageDescriptor
	fd_MessageCondition_condition_type  protoreflect.FieldDescriptor
	fd_MessageCondition_string1         protoreflect.FieldDescriptor
	fd_MessageCondition_string2         protoreflect.FieldDescriptor
	fd_MessageCondition_comparison      protoreflect.FieldDescriptor
	fd_MessageCondition_value           protoreflect.FieldDescriptor
	fd_MessageCondition_reference_price protoreflect.FieldDescriptor
)

func init() {
	file_kopi_strategies_automations_proto_init()
	md_MessageCondition = File_kopi_strategies_automations_proto.Messages().ByName("MessageCondition")
	fd_MessageCondition_condition_type = md_MessageCondition.Fields().ByName("condition_type")
	fd_MessageCondition_string1 = md_MessageCondition.Fields().ByName("string1")
	fd_MessageCondition_string2 = md_MessageCondition.Fields().ByName("string2")
	fd_MessageCondition_comparison = md_MessageCondition.Fields().ByName("comparison")
	fd_MessageCondition_value = md_MessageCondition.Fields().ByName("value")
	fd_MessageCondition_reference_price = md_MessageCondition.Fields().ByName("reference_price")
}

var _ protoreflect.Message = (*fastReflection_MessageCondition)(nil)

type fastReflection_MessageCondition MessageCondition

func (x *MessageCondition) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MessageCondition)(x)
}

func (x *MessageCondition) slowProtoReflect() protoreflect.Message {
	mi := &file_kopi_strategies_automations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MessageCondition_messageType fastReflection_MessageCondition_messageType
var _ protoreflect.MessageType = fastReflection_MessageCondition_messageType{}

type fastReflection_MessageCondition_messageType struct{}

func (x fastReflection_MessageCondition_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MessageCondition)(nil)
}
func (x fastReflection_MessageCondition_messageType) New() protoreflect.Message {
	return new(fastReflection_MessageCondition)
}
func (x fastReflection_MessageCondition_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MessageCondition
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MessageCondition) Descriptor() protoreflect.MessageDescriptor {
	return md_MessageCondition
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MessageCondition) Type() protoreflect.MessageType {
	return _fastReflection_MessageCondition_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MessageCondition) New() protoreflect.Message {
	return new(fastReflection_MessageCondition)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MessageCondition) Interface() protoreflect.ProtoMessage {
	return (*MessageCondition)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MessageCondition) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ConditionType != int64(0) {
		value := protoreflect.ValueOfInt64(x.ConditionType)
		if !f(fd_MessageCondition_condition_type, value) {
			return
		}
	}
	if x.String1 != "" {
		value := protoreflect.ValueOfString(x.String1)
		if !f(fd_MessageCondition_string1, value) {
			return
		}
	}
	if x.String2 != "" {
		value := protoreflect.ValueOfString(x.String2)
		if !f(fd_MessageCondition_string2, value) {
			return
		}
	}
	if x.Comparison != "" {
		value := protoreflect.ValueOfString(x.Comparison)
		if !f(fd_MessageCondition_comparison, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_MessageCondition_value, value) {
			return
		}
	}
	if x.ReferencePrice != "" {
		value := protoreflect.ValueOfString(x.ReferencePrice)
		if !f(fd_MessageCondition_reference_price, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MessageCondition) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kopi.strategies.MessageCondition.condition_type":
		return x.ConditionType != int64(0)
	case "kopi.strategies.MessageCondition.string1":
		return x.String1 != ""
	case "kopi.strategies.MessageCondition.string2":
		return x.String2 != ""
	case "kopi.strategies.MessageCondition.comparison":
		return x.Comparison != ""
	case "kopi.strategies.MessageCondition.value":
		return x.Value != ""
	case "kopi.strategies.MessageCondition.reference_price":
		return x.ReferencePrice != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.MessageCondition"))
		}
		panic(fmt.Errorf("message kopi.strategies.MessageCondition does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessageCondition) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kopi.strategies.MessageCondition.condition_type":
		x.ConditionType = int64(0)
	case "kopi.strategies.MessageCondition.string1":
		x.String1 = ""
	case "kopi.strategies.MessageCondition.string2":
		x.String2 = ""
	case "kopi.strategies.MessageCondition.comparison":
		x.Comparison = ""
	case "kopi.strategies.MessageCondition.value":
		x.Value = ""
	case "kopi.strategies.MessageCondition.reference_price":
		x.ReferencePrice = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.MessageCondition"))
		}
		panic(fmt.Errorf("message kopi.strategies.MessageCondition does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MessageCondition) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kopi.strategies.MessageCondition.condition_type":
		value := x.ConditionType
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.MessageCondition.string1":
		value := x.String1
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.MessageCondition.string2":
		value := x.String2
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.MessageCondition.comparison":
		value := x.Comparison
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.MessageCondition.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.MessageCondition.reference_price":
		value := x.ReferencePrice
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.MessageCondition"))
		}
		panic(fmt.Errorf("message kopi.strategies.MessageCondition does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessageCondition) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kopi.strategies.MessageCondition.condition_type":
		x.ConditionType = value.Int()
	case "kopi.strategies.MessageCondition.string1":
		x.String1 = value.Interface().(string)
	case "kopi.strategies.MessageCondition.string2":
		x.String2 = value.Interface().(string)
	case "kopi.strategies.MessageCondition.comparison":
		x.Comparison = value.Interface().(string)
	case "kopi.strategies.MessageCondition.value":
		x.Value = value.Interface().(string)
	case "kopi.strategies.MessageCondition.reference_price":
		x.ReferencePrice = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.MessageCondition"))
		}
		panic(fmt.Errorf("message kopi.strategies.MessageCondition does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessageCondition) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.MessageCondition.condition_type":
		panic(fmt.Errorf("field condition_type of message kopi.strategies.MessageCondition is not mutable"))
	case "kopi.strategies.MessageCondition.string1":
		panic(fmt.Errorf("field string1 of message kopi.strategies.MessageCondition is not mutable"))
	case "kopi.strategies.MessageCondition.string2":
		panic(fmt.Errorf("field string2 of message kopi.strategies.MessageCondition is not mutable"))
	case "kopi.strategies.MessageCondition.comparison":
		panic(fmt.Errorf("field comparison of message kopi.strategies.MessageCondition is not mutable"))
	case "kopi.strategies.MessageCondition.value":
		panic(fmt.Errorf("field value of message kopi.strategies.MessageCondition is not mutable"))
	case "kopi.strategies.MessageCondition.reference_price":
		panic(fmt.Errorf("field reference_price of message kopi.strategies.MessageCondition is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.MessageCondition"))
		}
		panic(fmt.Errorf("message kopi.strategies.MessageCondition does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MessageCondition) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.MessageCondition.condition_type":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.MessageCondition.string1":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.MessageCondition.string2":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.MessageCondition.comparison":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.MessageCondition.value":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.MessageCondition.reference_price":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.MessageCondition"))
		}
		panic(fmt.Errorf("message kopi.strategies.MessageCondition does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MessageCondition) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kopi.strategies.MessageCondition", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MessageCondition) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessageCondition) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MessageCondition) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MessageCondition) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MessageCondition)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ConditionType != 0 {
			n += 1 + runtime.Sov(uint64(x.ConditionType))
		}
		l = len(x.String1)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.String2)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Comparison)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReferencePrice)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MessageCondition)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ReferencePrice) > 0 {
			i -= len(x.ReferencePrice)
			copy(dAtA[i:], x.ReferencePrice)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReferencePrice)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Comparison) > 0 {
			i -= len(x.Comparison)
			copy(dAtA[i:], x.Comparison)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Comparison)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.String2) > 0 {
			i -= len(x.String2)
			copy(dAtA[i:], x.String2)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.String2)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.String1) > 0 {
			i -= len(x.String1)
			copy(dAtA[i:], x.String1)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.String1)))
			i--
			dAtA[i] = 0x12
		}
		if x.ConditionType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ConditionType))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MessageCondition)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MessageCondition: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MessageCondition: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConditionType", wireType)
				}
				x.ConditionType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ConditionType |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field String1", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.String1 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field String2", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.String2 = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Comparison", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Comparison = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReferencePrice", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReferencePrice = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_Automation_19_list)(nil)

type _Automation_19_list struct {
	list *[]*Condition
}

func (x *_Automation_19_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Automation_19_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Automation_19_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Condition)
	(*x.list)[i] = concreteValue
}

func (x *_Automation_19_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Condition)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Automation_19_list) AppendMutable() protoreflect.Value {
	v := new(Condition)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Automation_19_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Automation_19_list) NewElement() protoreflect.Value {
	v := new(Condition)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Automation_19_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Automation_20_list)(nil)

type _Automation_20_list struct {
	list *[]*Action
}

func (x *_Automation_20_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Automation_20_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Automation_20_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Action)
	(*x.list)[i] = concreteValue
}

func (x *_Automation_20_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Action)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Automation_20_list) AppendMutable() protoreflect.Value {
	v := new(Action)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Automation_20_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Automation_20_list) NewElement() protoreflect.Value {
	v := new(Action)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Automation_20_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Automation                                protoreflect.MessageDescriptor
	fd_Automation_index                          protoreflect.FieldDescriptor
	fd_Automation_address                        protoreflect.FieldDescriptor
	fd_Automation_title                          protoreflect.FieldDescriptor
	fd_Automation_active                         protoreflect.FieldDescriptor
	fd_Automation_added_at                       protoreflect.FieldDescriptor
	fd_Automation_last_execution                 protoreflect.FieldDescriptor
	fd_Automation_period_start                   protoreflect.FieldDescriptor
	fd_Automation_period_times_checked           protoreflect.FieldDescriptor
	fd_Automation_period_times_executed          protoreflect.FieldDescriptor
	fd_Automation_period_condition_fees_consumed protoreflect.FieldDescriptor
	fd_Automation_period_action_fees_consumed    protoreflect.FieldDescriptor
	fd_Automation_total_times_executed           protoreflect.FieldDescriptor
	fd_Automation_total_condition_fees_consumed  protoreflect.FieldDescriptor
	fd_Automation_total_action_fees_consumed     protoreflect.FieldDescriptor
	fd_Automation_interval_type                  protoreflect.FieldDescriptor
	fd_Automation_interval_length                protoreflect.FieldDescriptor
	fd_Automation_validity_type                  protoreflect.FieldDescriptor
	fd_Automation_validity_value                 protoreflect.FieldDescriptor
	fd_Automation_conditions                     protoreflect.FieldDescriptor
	fd_Automation_actions                        protoreflect.FieldDescriptor
)

func init() {
	file_kopi_strategies_automations_proto_init()
	md_Automation = File_kopi_strategies_automations_proto.Messages().ByName("Automation")
	fd_Automation_index = md_Automation.Fields().ByName("index")
	fd_Automation_address = md_Automation.Fields().ByName("address")
	fd_Automation_title = md_Automation.Fields().ByName("title")
	fd_Automation_active = md_Automation.Fields().ByName("active")
	fd_Automation_added_at = md_Automation.Fields().ByName("added_at")
	fd_Automation_last_execution = md_Automation.Fields().ByName("last_execution")
	fd_Automation_period_start = md_Automation.Fields().ByName("period_start")
	fd_Automation_period_times_checked = md_Automation.Fields().ByName("period_times_checked")
	fd_Automation_period_times_executed = md_Automation.Fields().ByName("period_times_executed")
	fd_Automation_period_condition_fees_consumed = md_Automation.Fields().ByName("period_condition_fees_consumed")
	fd_Automation_period_action_fees_consumed = md_Automation.Fields().ByName("period_action_fees_consumed")
	fd_Automation_total_times_executed = md_Automation.Fields().ByName("total_times_executed")
	fd_Automation_total_condition_fees_consumed = md_Automation.Fields().ByName("total_condition_fees_consumed")
	fd_Automation_total_action_fees_consumed = md_Automation.Fields().ByName("total_action_fees_consumed")
	fd_Automation_interval_type = md_Automation.Fields().ByName("interval_type")
	fd_Automation_interval_length = md_Automation.Fields().ByName("interval_length")
	fd_Automation_validity_type = md_Automation.Fields().ByName("validity_type")
	fd_Automation_validity_value = md_Automation.Fields().ByName("validity_value")
	fd_Automation_conditions = md_Automation.Fields().ByName("conditions")
	fd_Automation_actions = md_Automation.Fields().ByName("actions")
}

var _ protoreflect.Message = (*fastReflection_Automation)(nil)

type fastReflection_Automation Automation

func (x *Automation) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Automation)(x)
}

func (x *Automation) slowProtoReflect() protoreflect.Message {
	mi := &file_kopi_strategies_automations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Automation_messageType fastReflection_Automation_messageType
var _ protoreflect.MessageType = fastReflection_Automation_messageType{}

type fastReflection_Automation_messageType struct{}

func (x fastReflection_Automation_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Automation)(nil)
}
func (x fastReflection_Automation_messageType) New() protoreflect.Message {
	return new(fastReflection_Automation)
}
func (x fastReflection_Automation_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Automation
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Automation) Descriptor() protoreflect.MessageDescriptor {
	return md_Automation
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Automation) Type() protoreflect.MessageType {
	return _fastReflection_Automation_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Automation) New() protoreflect.Message {
	return new(fastReflection_Automation)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Automation) Interface() protoreflect.ProtoMessage {
	return (*Automation)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Automation) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Index != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Index)
		if !f(fd_Automation_index, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_Automation_address, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_Automation_title, value) {
			return
		}
	}
	if x.Active != false {
		value := protoreflect.ValueOfBool(x.Active)
		if !f(fd_Automation_active, value) {
			return
		}
	}
	if x.AddedAt != int64(0) {
		value := protoreflect.ValueOfInt64(x.AddedAt)
		if !f(fd_Automation_added_at, value) {
			return
		}
	}
	if x.LastExecution != int64(0) {
		value := protoreflect.ValueOfInt64(x.LastExecution)
		if !f(fd_Automation_last_execution, value) {
			return
		}
	}
	if x.PeriodStart != int64(0) {
		value := protoreflect.ValueOfInt64(x.PeriodStart)
		if !f(fd_Automation_period_start, value) {
			return
		}
	}
	if x.PeriodTimesChecked != int64(0) {
		value := protoreflect.ValueOfInt64(x.PeriodTimesChecked)
		if !f(fd_Automation_period_times_checked, value) {
			return
		}
	}
	if x.PeriodTimesExecuted != int64(0) {
		value := protoreflect.ValueOfInt64(x.PeriodTimesExecuted)
		if !f(fd_Automation_period_times_executed, value) {
			return
		}
	}
	if x.PeriodConditionFeesConsumed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PeriodConditionFeesConsumed)
		if !f(fd_Automation_period_condition_fees_consumed, value) {
			return
		}
	}
	if x.PeriodActionFeesConsumed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PeriodActionFeesConsumed)
		if !f(fd_Automation_period_action_fees_consumed, value) {
			return
		}
	}
	if x.TotalTimesExecuted != int64(0) {
		value := protoreflect.ValueOfInt64(x.TotalTimesExecuted)
		if !f(fd_Automation_total_times_executed, value) {
			return
		}
	}
	if x.TotalConditionFeesConsumed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalConditionFeesConsumed)
		if !f(fd_Automation_total_condition_fees_consumed, value) {
			return
		}
	}
	if x.TotalActionFeesConsumed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalActionFeesConsumed)
		if !f(fd_Automation_total_action_fees_consumed, value) {
			return
		}
	}
	if x.IntervalType != int64(0) {
		value := protoreflect.ValueOfInt64(x.IntervalType)
		if !f(fd_Automation_interval_type, value) {
			return
		}
	}
	if x.IntervalLength != int64(0) {
		value := protoreflect.ValueOfInt64(x.IntervalLength)
		if !f(fd_Automation_interval_length, value) {
			return
		}
	}
	if x.ValidityType != int64(0) {
		value := protoreflect.ValueOfInt64(x.ValidityType)
		if !f(fd_Automation_validity_type, value) {
			return
		}
	}
	if x.ValidityValue != int64(0) {
		value := protoreflect.ValueOfInt64(x.ValidityValue)
		if !f(fd_Automation_validity_value, value) {
			return
		}
	}
	if len(x.Conditions) != 0 {
		value := protoreflect.ValueOfList(&_Automation_19_list{list: &x.Conditions})
		if !f(fd_Automation_conditions, value) {
			return
		}
	}
	if len(x.Actions) != 0 {
		value := protoreflect.ValueOfList(&_Automation_20_list{list: &x.Actions})
		if !f(fd_Automation_actions, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Automation) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kopi.strategies.Automation.index":
		return x.Index != uint64(0)
	case "kopi.strategies.Automation.address":
		return x.Address != ""
	case "kopi.strategies.Automation.title":
		return x.Title != ""
	case "kopi.strategies.Automation.active":
		return x.Active != false
	case "kopi.strategies.Automation.added_at":
		return x.AddedAt != int64(0)
	case "kopi.strategies.Automation.last_execution":
		return x.LastExecution != int64(0)
	case "kopi.strategies.Automation.period_start":
		return x.PeriodStart != int64(0)
	case "kopi.strategies.Automation.period_times_checked":
		return x.PeriodTimesChecked != int64(0)
	case "kopi.strategies.Automation.period_times_executed":
		return x.PeriodTimesExecuted != int64(0)
	case "kopi.strategies.Automation.period_condition_fees_consumed":
		return x.PeriodConditionFeesConsumed != uint64(0)
	case "kopi.strategies.Automation.period_action_fees_consumed":
		return x.PeriodActionFeesConsumed != uint64(0)
	case "kopi.strategies.Automation.total_times_executed":
		return x.TotalTimesExecuted != int64(0)
	case "kopi.strategies.Automation.total_condition_fees_consumed":
		return x.TotalConditionFeesConsumed != uint64(0)
	case "kopi.strategies.Automation.total_action_fees_consumed":
		return x.TotalActionFeesConsumed != uint64(0)
	case "kopi.strategies.Automation.interval_type":
		return x.IntervalType != int64(0)
	case "kopi.strategies.Automation.interval_length":
		return x.IntervalLength != int64(0)
	case "kopi.strategies.Automation.validity_type":
		return x.ValidityType != int64(0)
	case "kopi.strategies.Automation.validity_value":
		return x.ValidityValue != int64(0)
	case "kopi.strategies.Automation.conditions":
		return len(x.Conditions) != 0
	case "kopi.strategies.Automation.actions":
		return len(x.Actions) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Automation"))
		}
		panic(fmt.Errorf("message kopi.strategies.Automation does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Automation) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kopi.strategies.Automation.index":
		x.Index = uint64(0)
	case "kopi.strategies.Automation.address":
		x.Address = ""
	case "kopi.strategies.Automation.title":
		x.Title = ""
	case "kopi.strategies.Automation.active":
		x.Active = false
	case "kopi.strategies.Automation.added_at":
		x.AddedAt = int64(0)
	case "kopi.strategies.Automation.last_execution":
		x.LastExecution = int64(0)
	case "kopi.strategies.Automation.period_start":
		x.PeriodStart = int64(0)
	case "kopi.strategies.Automation.period_times_checked":
		x.PeriodTimesChecked = int64(0)
	case "kopi.strategies.Automation.period_times_executed":
		x.PeriodTimesExecuted = int64(0)
	case "kopi.strategies.Automation.period_condition_fees_consumed":
		x.PeriodConditionFeesConsumed = uint64(0)
	case "kopi.strategies.Automation.period_action_fees_consumed":
		x.PeriodActionFeesConsumed = uint64(0)
	case "kopi.strategies.Automation.total_times_executed":
		x.TotalTimesExecuted = int64(0)
	case "kopi.strategies.Automation.total_condition_fees_consumed":
		x.TotalConditionFeesConsumed = uint64(0)
	case "kopi.strategies.Automation.total_action_fees_consumed":
		x.TotalActionFeesConsumed = uint64(0)
	case "kopi.strategies.Automation.interval_type":
		x.IntervalType = int64(0)
	case "kopi.strategies.Automation.interval_length":
		x.IntervalLength = int64(0)
	case "kopi.strategies.Automation.validity_type":
		x.ValidityType = int64(0)
	case "kopi.strategies.Automation.validity_value":
		x.ValidityValue = int64(0)
	case "kopi.strategies.Automation.conditions":
		x.Conditions = nil
	case "kopi.strategies.Automation.actions":
		x.Actions = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Automation"))
		}
		panic(fmt.Errorf("message kopi.strategies.Automation does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Automation) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kopi.strategies.Automation.index":
		value := x.Index
		return protoreflect.ValueOfUint64(value)
	case "kopi.strategies.Automation.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Automation.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.Automation.active":
		value := x.Active
		return protoreflect.ValueOfBool(value)
	case "kopi.strategies.Automation.added_at":
		value := x.AddedAt
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.last_execution":
		value := x.LastExecution
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.period_start":
		value := x.PeriodStart
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.period_times_checked":
		value := x.PeriodTimesChecked
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.period_times_executed":
		value := x.PeriodTimesExecuted
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.period_condition_fees_consumed":
		value := x.PeriodConditionFeesConsumed
		return protoreflect.ValueOfUint64(value)
	case "kopi.strategies.Automation.period_action_fees_consumed":
		value := x.PeriodActionFeesConsumed
		return protoreflect.ValueOfUint64(value)
	case "kopi.strategies.Automation.total_times_executed":
		value := x.TotalTimesExecuted
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.total_condition_fees_consumed":
		value := x.TotalConditionFeesConsumed
		return protoreflect.ValueOfUint64(value)
	case "kopi.strategies.Automation.total_action_fees_consumed":
		value := x.TotalActionFeesConsumed
		return protoreflect.ValueOfUint64(value)
	case "kopi.strategies.Automation.interval_type":
		value := x.IntervalType
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.interval_length":
		value := x.IntervalLength
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.validity_type":
		value := x.ValidityType
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.validity_value":
		value := x.ValidityValue
		return protoreflect.ValueOfInt64(value)
	case "kopi.strategies.Automation.conditions":
		if len(x.Conditions) == 0 {
			return protoreflect.ValueOfList(&_Automation_19_list{})
		}
		listValue := &_Automation_19_list{list: &x.Conditions}
		return protoreflect.ValueOfList(listValue)
	case "kopi.strategies.Automation.actions":
		if len(x.Actions) == 0 {
			return protoreflect.ValueOfList(&_Automation_20_list{})
		}
		listValue := &_Automation_20_list{list: &x.Actions}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Automation"))
		}
		panic(fmt.Errorf("message kopi.strategies.Automation does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Automation) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kopi.strategies.Automation.index":
		x.Index = value.Uint()
	case "kopi.strategies.Automation.address":
		x.Address = value.Interface().(string)
	case "kopi.strategies.Automation.title":
		x.Title = value.Interface().(string)
	case "kopi.strategies.Automation.active":
		x.Active = value.Bool()
	case "kopi.strategies.Automation.added_at":
		x.AddedAt = value.Int()
	case "kopi.strategies.Automation.last_execution":
		x.LastExecution = value.Int()
	case "kopi.strategies.Automation.period_start":
		x.PeriodStart = value.Int()
	case "kopi.strategies.Automation.period_times_checked":
		x.PeriodTimesChecked = value.Int()
	case "kopi.strategies.Automation.period_times_executed":
		x.PeriodTimesExecuted = value.Int()
	case "kopi.strategies.Automation.period_condition_fees_consumed":
		x.PeriodConditionFeesConsumed = value.Uint()
	case "kopi.strategies.Automation.period_action_fees_consumed":
		x.PeriodActionFeesConsumed = value.Uint()
	case "kopi.strategies.Automation.total_times_executed":
		x.TotalTimesExecuted = value.Int()
	case "kopi.strategies.Automation.total_condition_fees_consumed":
		x.TotalConditionFeesConsumed = value.Uint()
	case "kopi.strategies.Automation.total_action_fees_consumed":
		x.TotalActionFeesConsumed = value.Uint()
	case "kopi.strategies.Automation.interval_type":
		x.IntervalType = value.Int()
	case "kopi.strategies.Automation.interval_length":
		x.IntervalLength = value.Int()
	case "kopi.strategies.Automation.validity_type":
		x.ValidityType = value.Int()
	case "kopi.strategies.Automation.validity_value":
		x.ValidityValue = value.Int()
	case "kopi.strategies.Automation.conditions":
		lv := value.List()
		clv := lv.(*_Automation_19_list)
		x.Conditions = *clv.list
	case "kopi.strategies.Automation.actions":
		lv := value.List()
		clv := lv.(*_Automation_20_list)
		x.Actions = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Automation"))
		}
		panic(fmt.Errorf("message kopi.strategies.Automation does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Automation) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.Automation.conditions":
		if x.Conditions == nil {
			x.Conditions = []*Condition{}
		}
		value := &_Automation_19_list{list: &x.Conditions}
		return protoreflect.ValueOfList(value)
	case "kopi.strategies.Automation.actions":
		if x.Actions == nil {
			x.Actions = []*Action{}
		}
		value := &_Automation_20_list{list: &x.Actions}
		return protoreflect.ValueOfList(value)
	case "kopi.strategies.Automation.index":
		panic(fmt.Errorf("field index of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.address":
		panic(fmt.Errorf("field address of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.title":
		panic(fmt.Errorf("field title of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.active":
		panic(fmt.Errorf("field active of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.added_at":
		panic(fmt.Errorf("field added_at of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.last_execution":
		panic(fmt.Errorf("field last_execution of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.period_start":
		panic(fmt.Errorf("field period_start of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.period_times_checked":
		panic(fmt.Errorf("field period_times_checked of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.period_times_executed":
		panic(fmt.Errorf("field period_times_executed of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.period_condition_fees_consumed":
		panic(fmt.Errorf("field period_condition_fees_consumed of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.period_action_fees_consumed":
		panic(fmt.Errorf("field period_action_fees_consumed of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.total_times_executed":
		panic(fmt.Errorf("field total_times_executed of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.total_condition_fees_consumed":
		panic(fmt.Errorf("field total_condition_fees_consumed of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.total_action_fees_consumed":
		panic(fmt.Errorf("field total_action_fees_consumed of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.interval_type":
		panic(fmt.Errorf("field interval_type of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.interval_length":
		panic(fmt.Errorf("field interval_length of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.validity_type":
		panic(fmt.Errorf("field validity_type of message kopi.strategies.Automation is not mutable"))
	case "kopi.strategies.Automation.validity_value":
		panic(fmt.Errorf("field validity_value of message kopi.strategies.Automation is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Automation"))
		}
		panic(fmt.Errorf("message kopi.strategies.Automation does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Automation) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.Automation.index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kopi.strategies.Automation.address":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Automation.title":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.Automation.active":
		return protoreflect.ValueOfBool(false)
	case "kopi.strategies.Automation.added_at":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.last_execution":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.period_start":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.period_times_checked":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.period_times_executed":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.period_condition_fees_consumed":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kopi.strategies.Automation.period_action_fees_consumed":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kopi.strategies.Automation.total_times_executed":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.total_condition_fees_consumed":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kopi.strategies.Automation.total_action_fees_consumed":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kopi.strategies.Automation.interval_type":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.interval_length":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.validity_type":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.validity_value":
		return protoreflect.ValueOfInt64(int64(0))
	case "kopi.strategies.Automation.conditions":
		list := []*Condition{}
		return protoreflect.ValueOfList(&_Automation_19_list{list: &list})
	case "kopi.strategies.Automation.actions":
		list := []*Action{}
		return protoreflect.ValueOfList(&_Automation_20_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.Automation"))
		}
		panic(fmt.Errorf("message kopi.strategies.Automation does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Automation) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kopi.strategies.Automation", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Automation) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Automation) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Automation) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Automation) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Automation)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Index != 0 {
			n += 1 + runtime.Sov(uint64(x.Index))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Active {
			n += 2
		}
		if x.AddedAt != 0 {
			n += 1 + runtime.Sov(uint64(x.AddedAt))
		}
		if x.LastExecution != 0 {
			n += 1 + runtime.Sov(uint64(x.LastExecution))
		}
		if x.PeriodStart != 0 {
			n += 1 + runtime.Sov(uint64(x.PeriodStart))
		}
		if x.PeriodTimesChecked != 0 {
			n += 1 + runtime.Sov(uint64(x.PeriodTimesChecked))
		}
		if x.PeriodTimesExecuted != 0 {
			n += 1 + runtime.Sov(uint64(x.PeriodTimesExecuted))
		}
		if x.PeriodConditionFeesConsumed != 0 {
			n += 1 + runtime.Sov(uint64(x.PeriodConditionFeesConsumed))
		}
		if x.PeriodActionFeesConsumed != 0 {
			n += 1 + runtime.Sov(uint64(x.PeriodActionFeesConsumed))
		}
		if x.TotalTimesExecuted != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalTimesExecuted))
		}
		if x.TotalConditionFeesConsumed != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalConditionFeesConsumed))
		}
		if x.TotalActionFeesConsumed != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalActionFeesConsumed))
		}
		if x.IntervalType != 0 {
			n += 1 + runtime.Sov(uint64(x.IntervalType))
		}
		if x.IntervalLength != 0 {
			n += 2 + runtime.Sov(uint64(x.IntervalLength))
		}
		if x.ValidityType != 0 {
			n += 2 + runtime.Sov(uint64(x.ValidityType))
		}
		if x.ValidityValue != 0 {
			n += 2 + runtime.Sov(uint64(x.ValidityValue))
		}
		if len(x.Conditions) > 0 {
			for _, e := range x.Conditions {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Actions) > 0 {
			for _, e := range x.Actions {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Automation)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Actions) > 0 {
			for iNdEx := len(x.Actions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Actions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xa2
			}
		}
		if len(x.Conditions) > 0 {
			for iNdEx := len(x.Conditions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Conditions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x9a
			}
		}
		if x.ValidityValue != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValidityValue))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x90
		}
		if x.ValidityType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ValidityType))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x88
		}
		if x.IntervalLength != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IntervalLength))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x80
		}
		if x.IntervalType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.IntervalType))
			i--
			dAtA[i] = 0x78
		}
		if x.TotalActionFeesConsumed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalActionFeesConsumed))
			i--
			dAtA[i] = 0x70
		}
		if x.TotalConditionFeesConsumed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalConditionFeesConsumed))
			i--
			dAtA[i] = 0x68
		}
		if x.TotalTimesExecuted != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalTimesExecuted))
			i--
			dAtA[i] = 0x60
		}
		if x.PeriodActionFeesConsumed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PeriodActionFeesConsumed))
			i--
			dAtA[i] = 0x58
		}
		if x.PeriodConditionFeesConsumed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PeriodConditionFeesConsumed))
			i--
			dAtA[i] = 0x50
		}
		if x.PeriodTimesExecuted != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PeriodTimesExecuted))
			i--
			dAtA[i] = 0x48
		}
		if x.PeriodTimesChecked != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PeriodTimesChecked))
			i--
			dAtA[i] = 0x40
		}
		if x.PeriodStart != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PeriodStart))
			i--
			dAtA[i] = 0x38
		}
		if x.LastExecution != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LastExecution))
			i--
			dAtA[i] = 0x30
		}
		if x.AddedAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AddedAt))
			i--
			dAtA[i] = 0x28
		}
		if x.Active {
			i--
			if x.Active {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x20
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.Index != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Index))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Automation)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Automation: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Automation: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				x.Index = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Index |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Active = bool(v != 0)
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddedAt", wireType)
				}
				x.AddedAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AddedAt |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastExecution", wireType)
				}
				x.LastExecution = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LastExecution |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PeriodStart", wireType)
				}
				x.PeriodStart = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PeriodStart |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PeriodTimesChecked", wireType)
				}
				x.PeriodTimesChecked = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PeriodTimesChecked |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PeriodTimesExecuted", wireType)
				}
				x.PeriodTimesExecuted = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PeriodTimesExecuted |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PeriodConditionFeesConsumed", wireType)
				}
				x.PeriodConditionFeesConsumed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PeriodConditionFeesConsumed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PeriodActionFeesConsumed", wireType)
				}
				x.PeriodActionFeesConsumed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PeriodActionFeesConsumed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalTimesExecuted", wireType)
				}
				x.TotalTimesExecuted = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalTimesExecuted |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalConditionFeesConsumed", wireType)
				}
				x.TotalConditionFeesConsumed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalConditionFeesConsumed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 14:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalActionFeesConsumed", wireType)
				}
				x.TotalActionFeesConsumed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalActionFeesConsumed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IntervalType", wireType)
				}
				x.IntervalType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IntervalType |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 16:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IntervalLength", wireType)
				}
				x.IntervalLength = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.IntervalLength |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 17:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidityType", wireType)
				}
				x.ValidityType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValidityType |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 18:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidityValue", wireType)
				}
				x.ValidityValue = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ValidityValue |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 19:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Conditions = append(x.Conditions, &Condition{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Conditions[len(x.Conditions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 20:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Actions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Actions = append(x.Actions, &Action{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Actions[len(x.Actions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GenesisAutomationFunds         protoreflect.MessageDescriptor
	fd_GenesisAutomationFunds_address protoreflect.FieldDescriptor
	fd_GenesisAutomationFunds_funds   protoreflect.FieldDescriptor
)

func init() {
	file_kopi_strategies_automations_proto_init()
	md_GenesisAutomationFunds = File_kopi_strategies_automations_proto.Messages().ByName("GenesisAutomationFunds")
	fd_GenesisAutomationFunds_address = md_GenesisAutomationFunds.Fields().ByName("address")
	fd_GenesisAutomationFunds_funds = md_GenesisAutomationFunds.Fields().ByName("funds")
}

var _ protoreflect.Message = (*fastReflection_GenesisAutomationFunds)(nil)

type fastReflection_GenesisAutomationFunds GenesisAutomationFunds

func (x *GenesisAutomationFunds) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisAutomationFunds)(x)
}

func (x *GenesisAutomationFunds) slowProtoReflect() protoreflect.Message {
	mi := &file_kopi_strategies_automations_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisAutomationFunds_messageType fastReflection_GenesisAutomationFunds_messageType
var _ protoreflect.MessageType = fastReflection_GenesisAutomationFunds_messageType{}

type fastReflection_GenesisAutomationFunds_messageType struct{}

func (x fastReflection_GenesisAutomationFunds_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisAutomationFunds)(nil)
}
func (x fastReflection_GenesisAutomationFunds_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisAutomationFunds)
}
func (x fastReflection_GenesisAutomationFunds_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisAutomationFunds
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisAutomationFunds) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisAutomationFunds
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisAutomationFunds) Type() protoreflect.MessageType {
	return _fastReflection_GenesisAutomationFunds_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisAutomationFunds) New() protoreflect.Message {
	return new(fastReflection_GenesisAutomationFunds)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisAutomationFunds) Interface() protoreflect.ProtoMessage {
	return (*GenesisAutomationFunds)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisAutomationFunds) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_GenesisAutomationFunds_address, value) {
			return
		}
	}
	if len(x.Funds) != 0 {
		value := protoreflect.ValueOfBytes(x.Funds)
		if !f(fd_GenesisAutomationFunds_funds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisAutomationFunds) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kopi.strategies.GenesisAutomationFunds.address":
		return x.Address != ""
	case "kopi.strategies.GenesisAutomationFunds.funds":
		return len(x.Funds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.GenesisAutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.GenesisAutomationFunds does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisAutomationFunds) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kopi.strategies.GenesisAutomationFunds.address":
		x.Address = ""
	case "kopi.strategies.GenesisAutomationFunds.funds":
		x.Funds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.GenesisAutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.GenesisAutomationFunds does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisAutomationFunds) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kopi.strategies.GenesisAutomationFunds.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "kopi.strategies.GenesisAutomationFunds.funds":
		value := x.Funds
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.GenesisAutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.GenesisAutomationFunds does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisAutomationFunds) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kopi.strategies.GenesisAutomationFunds.address":
		x.Address = value.Interface().(string)
	case "kopi.strategies.GenesisAutomationFunds.funds":
		x.Funds = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.GenesisAutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.GenesisAutomationFunds does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisAutomationFunds) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.GenesisAutomationFunds.address":
		panic(fmt.Errorf("field address of message kopi.strategies.GenesisAutomationFunds is not mutable"))
	case "kopi.strategies.GenesisAutomationFunds.funds":
		panic(fmt.Errorf("field funds of message kopi.strategies.GenesisAutomationFunds is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.GenesisAutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.GenesisAutomationFunds does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisAutomationFunds) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.GenesisAutomationFunds.address":
		return protoreflect.ValueOfString("")
	case "kopi.strategies.GenesisAutomationFunds.funds":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.GenesisAutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.GenesisAutomationFunds does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisAutomationFunds) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kopi.strategies.GenesisAutomationFunds", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisAutomationFunds) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisAutomationFunds) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisAutomationFunds) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisAutomationFunds) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisAutomationFunds)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Funds)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisAutomationFunds)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Funds) > 0 {
			i -= len(x.Funds)
			copy(dAtA[i:], x.Funds)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Funds)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisAutomationFunds)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisAutomationFunds: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisAutomationFunds: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Funds", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Funds = append(x.Funds[:0], dAtA[iNdEx:postIndex]...)
				if x.Funds == nil {
					x.Funds = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AutomationFunds       protoreflect.MessageDescriptor
	fd_AutomationFunds_funds protoreflect.FieldDescriptor
)

func init() {
	file_kopi_strategies_automations_proto_init()
	md_AutomationFunds = File_kopi_strategies_automations_proto.Messages().ByName("AutomationFunds")
	fd_AutomationFunds_funds = md_AutomationFunds.Fields().ByName("funds")
}

var _ protoreflect.Message = (*fastReflection_AutomationFunds)(nil)

type fastReflection_AutomationFunds AutomationFunds

func (x *AutomationFunds) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AutomationFunds)(x)
}

func (x *AutomationFunds) slowProtoReflect() protoreflect.Message {
	mi := &file_kopi_strategies_automations_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AutomationFunds_messageType fastReflection_AutomationFunds_messageType
var _ protoreflect.MessageType = fastReflection_AutomationFunds_messageType{}

type fastReflection_AutomationFunds_messageType struct{}

func (x fastReflection_AutomationFunds_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AutomationFunds)(nil)
}
func (x fastReflection_AutomationFunds_messageType) New() protoreflect.Message {
	return new(fastReflection_AutomationFunds)
}
func (x fastReflection_AutomationFunds_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AutomationFunds
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AutomationFunds) Descriptor() protoreflect.MessageDescriptor {
	return md_AutomationFunds
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AutomationFunds) Type() protoreflect.MessageType {
	return _fastReflection_AutomationFunds_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AutomationFunds) New() protoreflect.Message {
	return new(fastReflection_AutomationFunds)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AutomationFunds) Interface() protoreflect.ProtoMessage {
	return (*AutomationFunds)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AutomationFunds) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Funds) != 0 {
		value := protoreflect.ValueOfBytes(x.Funds)
		if !f(fd_AutomationFunds_funds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AutomationFunds) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kopi.strategies.AutomationFunds.funds":
		return len(x.Funds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.AutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.AutomationFunds does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AutomationFunds) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kopi.strategies.AutomationFunds.funds":
		x.Funds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.AutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.AutomationFunds does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AutomationFunds) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kopi.strategies.AutomationFunds.funds":
		value := x.Funds
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.AutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.AutomationFunds does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AutomationFunds) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kopi.strategies.AutomationFunds.funds":
		x.Funds = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.AutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.AutomationFunds does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AutomationFunds) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.AutomationFunds.funds":
		panic(fmt.Errorf("field funds of message kopi.strategies.AutomationFunds is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.AutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.AutomationFunds does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AutomationFunds) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kopi.strategies.AutomationFunds.funds":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kopi.strategies.AutomationFunds"))
		}
		panic(fmt.Errorf("message kopi.strategies.AutomationFunds does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AutomationFunds) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kopi.strategies.AutomationFunds", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AutomationFunds) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AutomationFunds) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AutomationFunds) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AutomationFunds) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AutomationFunds)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Funds)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AutomationFunds)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Funds) > 0 {
			i -= len(x.Funds)
			copy(dAtA[i:], x.Funds)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Funds)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AutomationFunds)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AutomationFunds: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AutomationFunds: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Funds", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Funds = append(x.Funds[:0], dAtA[iNdEx:postIndex]...)
				if x.Funds == nil {
					x.Funds = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: kopi/strategies/automations.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionType  int64  `protobuf:"varint,1,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	String1        string `protobuf:"bytes,2,opt,name=string1,proto3" json:"string1,omitempty"`
	String2        string `protobuf:"bytes,3,opt,name=string2,proto3" json:"string2,omitempty"`
	Comparison     string `protobuf:"bytes,4,opt,name=comparison,proto3" json:"comparison,omitempty"`
	Value          []byte `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	ReferencePrice []byte `protobuf:"bytes,6,opt,name=reference_price,json=referencePrice,proto3" json:"reference_price,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kopi_strategies_automations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_kopi_strategies_automations_proto_rawDescGZIP(), []int{0}
}

func (x *Condition) GetConditionType() int64 {
	if x != nil {
		return x.ConditionType
	}
	return 0
}

func (x *Condition) GetString1() string {
	if x != nil {
		return x.String1
	}
	return ""
}

func (x *Condition) GetString2() string {
	if x != nil {
		return x.String2
	}
	return ""
}

func (x *Condition) GetComparison() string {
	if x != nil {
		return x.Comparison
	}
	return ""
}

func (x *Condition) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Condition) GetReferencePrice() []byte {
	if x != nil {
		return x.ReferencePrice
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType         int64  `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	String1            string `protobuf:"bytes,2,opt,name=string1,proto3" json:"string1,omitempty"`
	String2            string `protobuf:"bytes,3,opt,name=string2,proto3" json:"string2,omitempty"`
	Amount             string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	MinimumTradeAmount string `protobuf:"bytes,5,opt,name=minimum_trade_amount,json=minimumTradeAmount,proto3" json:"minimum_trade_amount,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kopi_strategies_automations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_kopi_strategies_automations_proto_rawDescGZIP(), []int{1}
}

func (x *Action) GetActionType() int64 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *Action) GetString1() string {
	if x != nil {
		return x.String1
	}
	return ""
}

func (x *Action) GetString2() string {
	if x != nil {
		return x.String2
	}
	return ""
}

func (x *Action) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Action) GetMinimumTradeAmount() string {
	if x != nil {
		return x.MinimumTradeAmount
	}
	return ""
}

type MessageCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConditionType  int64  `protobuf:"varint,1,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"`
	String1        string `protobuf:"bytes,2,opt,name=string1,proto3" json:"string1,omitempty"`
	String2        string `protobuf:"bytes,3,opt,name=string2,proto3" json:"string2,omitempty"`
	Comparison     string `protobuf:"bytes,4,opt,name=comparison,proto3" json:"comparison,omitempty"`
	Value          string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	ReferencePrice string `protobuf:"bytes,6,opt,name=reference_price,json=referencePrice,proto3" json:"reference_price,omitempty"`
}

func (x *MessageCondition) Reset() {
	*x = MessageCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kopi_strategies_automations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCondition) ProtoMessage() {}

// Deprecated: Use MessageCondition.ProtoReflect.Descriptor instead.
func (*MessageCondition) Descriptor() ([]byte, []int) {
	return file_kopi_strategies_automations_proto_rawDescGZIP(), []int{2}
}

func (x *MessageCondition) GetConditionType() int64 {
	if x != nil {
		return x.ConditionType
	}
	return 0
}

func (x *MessageCondition) GetString1() string {
	if x != nil {
		return x.String1
	}
	return ""
}

func (x *MessageCondition) GetString2() string {
	if x != nil {
		return x.String2
	}
	return ""
}

func (x *MessageCondition) GetComparison() string {
	if x != nil {
		return x.Comparison
	}
	return ""
}

func (x *MessageCondition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MessageCondition) GetReferencePrice() string {
	if x != nil {
		return x.ReferencePrice
	}
	return ""
}

type Automation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index                       uint64       `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Address                     string       `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Title                       string       `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Active                      bool         `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	AddedAt                     int64        `protobuf:"varint,5,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	LastExecution               int64        `protobuf:"varint,6,opt,name=last_execution,json=lastExecution,proto3" json:"last_execution,omitempty"`
	PeriodStart                 int64        `protobuf:"varint,7,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodTimesChecked          int64        `protobuf:"varint,8,opt,name=period_times_checked,json=periodTimesChecked,proto3" json:"period_times_checked,omitempty"`
	PeriodTimesExecuted         int64        `protobuf:"varint,9,opt,name=period_times_executed,json=periodTimesExecuted,proto3" json:"period_times_executed,omitempty"`
	PeriodConditionFeesConsumed uint64       `protobuf:"varint,10,opt,name=period_condition_fees_consumed,json=periodConditionFeesConsumed,proto3" json:"period_condition_fees_consumed,omitempty"`
	PeriodActionFeesConsumed    uint64       `protobuf:"varint,11,opt,name=period_action_fees_consumed,json=periodActionFeesConsumed,proto3" json:"period_action_fees_consumed,omitempty"`
	TotalTimesExecuted          int64        `protobuf:"varint,12,opt,name=total_times_executed,json=totalTimesExecuted,proto3" json:"total_times_executed,omitempty"`
	TotalConditionFeesConsumed  uint64       `protobuf:"varint,13,opt,name=total_condition_fees_consumed,json=totalConditionFeesConsumed,proto3" json:"total_condition_fees_consumed,omitempty"`
	TotalActionFeesConsumed     uint64       `protobuf:"varint,14,opt,name=total_action_fees_consumed,json=totalActionFeesConsumed,proto3" json:"total_action_fees_consumed,omitempty"`
	IntervalType                int64        `protobuf:"varint,15,opt,name=interval_type,json=intervalType,proto3" json:"interval_type,omitempty"`
	IntervalLength              int64        `protobuf:"varint,16,opt,name=interval_length,json=intervalLength,proto3" json:"interval_length,omitempty"`
	ValidityType                int64        `protobuf:"varint,17,opt,name=validity_type,json=validityType,proto3" json:"validity_type,omitempty"`
	ValidityValue               int64        `protobuf:"varint,18,opt,name=validity_value,json=validityValue,proto3" json:"validity_value,omitempty"`
	Conditions                  []*Condition `protobuf:"bytes,19,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Actions                     []*Action    `protobuf:"bytes,20,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Automation) Reset() {
	*x = Automation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kopi_strategies_automations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Automation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Automation) ProtoMessage() {}

// Deprecated: Use Automation.ProtoReflect.Descriptor instead.
func (*Automation) Descriptor() ([]byte, []int) {
	return file_kopi_strategies_automations_proto_rawDescGZIP(), []int{3}
}

func (x *Automation) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Automation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Automation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Automation) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Automation) GetAddedAt() int64 {
	if x != nil {
		return x.AddedAt
	}
	return 0
}

func (x *Automation) GetLastExecution() int64 {
	if x != nil {
		return x.LastExecution
	}
	return 0
}

func (x *Automation) GetPeriodStart() int64 {
	if x != nil {
		return x.PeriodStart
	}
	return 0
}

func (x *Automation) GetPeriodTimesChecked() int64 {
	if x != nil {
		return x.PeriodTimesChecked
	}
	return 0
}

func (x *Automation) GetPeriodTimesExecuted() int64 {
	if x != nil {
		return x.PeriodTimesExecuted
	}
	return 0
}

func (x *Automation) GetPeriodConditionFeesConsumed() uint64 {
	if x != nil {
		return x.PeriodConditionFeesConsumed
	}
	return 0
}

func (x *Automation) GetPeriodActionFeesConsumed() uint64 {
	if x != nil {
		return x.PeriodActionFeesConsumed
	}
	return 0
}

func (x *Automation) GetTotalTimesExecuted() int64 {
	if x != nil {
		return x.TotalTimesExecuted
	}
	return 0
}

func (x *Automation) GetTotalConditionFeesConsumed() uint64 {
	if x != nil {
		return x.TotalConditionFeesConsumed
	}
	return 0
}

func (x *Automation) GetTotalActionFeesConsumed() uint64 {
	if x != nil {
		return x.TotalActionFeesConsumed
	}
	return 0
}

func (x *Automation) GetIntervalType() int64 {
	if x != nil {
		return x.IntervalType
	}
	return 0
}

func (x *Automation) GetIntervalLength() int64 {
	if x != nil {
		return x.IntervalLength
	}
	return 0
}

func (x *Automation) GetValidityType() int64 {
	if x != nil {
		return x.ValidityType
	}
	return 0
}

func (x *Automation) GetValidityValue() int64 {
	if x != nil {
		return x.ValidityValue
	}
	return 0
}

func (x *Automation) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Automation) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GenesisAutomationFunds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Funds   []byte `protobuf:"bytes,2,opt,name=funds,proto3" json:"funds,omitempty"`
}

func (x *GenesisAutomationFunds) Reset() {
	*x = GenesisAutomationFunds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kopi_strategies_automations_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisAutomationFunds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisAutomationFunds) ProtoMessage() {}

// Deprecated: Use GenesisAutomationFunds.ProtoReflect.Descriptor instead.
func (*GenesisAutomationFunds) Descriptor() ([]byte, []int) {
	return file_kopi_strategies_automations_proto_rawDescGZIP(), []int{4}
}

func (x *GenesisAutomationFunds) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GenesisAutomationFunds) GetFunds() []byte {
	if x != nil {
		return x.Funds
	}
	return nil
}

type AutomationFunds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Funds []byte `protobuf:"bytes,1,opt,name=funds,proto3" json:"funds,omitempty"`
}

func (x *AutomationFunds) Reset() {
	*x = AutomationFunds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kopi_strategies_automations_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomationFunds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomationFunds) ProtoMessage() {}

// Deprecated: Use AutomationFunds.ProtoReflect.Descriptor instead.
func (*AutomationFunds) Descriptor() ([]byte, []int) {
	return file_kopi_strategies_automations_proto_rawDescGZIP(), []int{5}
}

func (x *AutomationFunds) GetFunds() []byte {
	if x != nil {
		return x.Funds
	}
	return nil
}

var File_kopi_strategies_automations_proto protoreflect.FileDescriptor

var file_kopi_strategies_automations_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6b, 0x6f, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6b, 0x6f, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x69, 0x65, 0x73, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x02, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69,
	0x73, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c,
	0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x23, 0xc8, 0xde, 0x1f, 0x01, 0xda, 0xde, 0x1f,
	0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0x52, 0x0e, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x31, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x69, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xf4, 0x06, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a,
	0x1e, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6b, 0x6f, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x69, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x6f, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x67, 0x0a, 0x16,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x33, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x05,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x42, 0xa6, 0x01,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x6f, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x69, 0x65, 0x73, 0x42, 0x10, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x20, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x6f, 0x70, 0x69,
	0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x4b, 0x53,
	0x58, 0xaa, 0x02, 0x0f, 0x4b, 0x6f, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x69, 0x65, 0x73, 0xca, 0x02, 0x0f, 0x4b, 0x6f, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x69, 0x65, 0x73, 0xe2, 0x02, 0x1b, 0x4b, 0x6f, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x4b, 0x6f, 0x70, 0x69, 0x3a, 0x3a, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kopi_strategies_automations_proto_rawDescOnce sync.Once
	file_kopi_strategies_automations_proto_rawDescData = file_kopi_strategies_automations_proto_rawDesc
)

func file_kopi_strategies_automations_proto_rawDescGZIP() []byte {
	file_kopi_strategies_automations_proto_rawDescOnce.Do(func() {
		file_kopi_strategies_automations_proto_rawDescData = protoimpl.X.CompressGZIP(file_kopi_strategies_automations_proto_rawDescData)
	})
	return file_kopi_strategies_automations_proto_rawDescData
}

var file_kopi_strategies_automations_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_kopi_strategies_automations_proto_goTypes = []interface{}{
	(*Condition)(nil),              // 0: kopi.strategies.Condition
	(*Action)(nil),                 // 1: kopi.strategies.Action
	(*MessageCondition)(nil),       // 2: kopi.strategies.MessageCondition
	(*Automation)(nil),             // 3: kopi.strategies.Automation
	(*GenesisAutomationFunds)(nil), // 4: kopi.strategies.GenesisAutomationFunds
	(*AutomationFunds)(nil),        // 5: kopi.strategies.AutomationFunds
}
var file_kopi_strategies_automations_proto_depIdxs = []int32{
	0, // 0: kopi.strategies.Automation.conditions:type_name -> kopi.strategies.Condition
	1, // 1: kopi.strategies.Automation.actions:type_name -> kopi.strategies.Action
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_kopi_strategies_automations_proto_init() }
func file_kopi_strategies_automations_proto_init() {
	if File_kopi_strategies_automations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kopi_strategies_automations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kopi_strategies_automations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kopi_strategies_automations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kopi_strategies_automations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Automation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kopi_strategies_automations_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisAutomationFunds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kopi_strategies_automations_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomationFunds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kopi_strategies_automations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kopi_strategies_automations_proto_goTypes,
		DependencyIndexes: file_kopi_strategies_automations_proto_depIdxs,
		MessageInfos:      file_kopi_strategies_automations_proto_msgTypes,
	}.Build()
	File_kopi_strategies_automations_proto = out.File
	file_kopi_strategies_automations_proto_rawDesc = nil
	file_kopi_strategies_automations_proto_goTypes = nil
	file_kopi_strategies_automations_proto_depIdxs = nil
}
