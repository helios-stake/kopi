syntax = "proto3";
package kopi.swap;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "kopi/swap/params.proto";

option go_package = "github.com/kopi-money/kopi/x/swap/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kopi/swap/params";
  }

  // Queries a list of KCoinsSupply items.
  rpc KCoinSupply (QueryKCoinSupplyRequest) returns (QueryKCoinSupplyResponse) {
    option (google.api.http).get = "/kopi/swap/kcoins/supply/by_denom";

  }

  // Queries a list of KCoinsSupplies items.
  rpc KCoinsSupplies (QueryKCoinsSuppliesRequest) returns (QueryKCoinsSuppliesResponse) {
    option (google.api.http).get = "/kopi/swap/kcoins";

  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {

  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryKCoinSupplyRequest {
  string denom = 1;
}

message QueryKCoinSupplyResponse {
  string amount = 1;
  string price = 2;
  string reference_denom = 3;
  string ratio_reference = 4;
  string ratio_virtual = 5;
}

message QueryKCoinsSuppliesRequest {}

message Supply {
  string denom = 1;
  string amount = 2;
  string price = 3;
  string reference_denom = 4;
}

message QueryKCoinsSuppliesResponse {
  repeated Supply supplies = 1;
}

message QueryPriceRequest {
  string denom = 1;
}

message QueryPriceResponse {
  string price = 1;
}

