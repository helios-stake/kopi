syntax = "proto3";
package kopi.tokenfactory;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "kopi/tokenfactory/params.proto";

option go_package = "github.com/kopi-money/kopi/x/tokenfactory/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateFeeAmount(MsgUpdateFeeAmount) returns (Void);

  rpc CreateDenom(MsgCreateDenom)     returns (Void);
  rpc MintDenom(MsgMintDenom)         returns (Void);
  rpc BurnDenom(MsgBurnDenom)         returns (Void);
  rpc ChangeAdmin(MsgChangeAdmin)     returns (Void);
  rpc ForceTransfer(MsgForceTransfer) returns (Void);
}

message Void {}

message MsgUpdateFeeAmount {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "kopi/x/tokenfactory/MsgUpdateFeeAmount";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string fee_amount = 2;
}

message MsgCreateDenom {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
}

message MsgMintDenom {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
  string amount = 3;
  string target_address = 4;
}

message MsgBurnDenom {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
  string amount = 3;
  string target_address = 4;
}

message MsgChangeAdmin {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
  string new_admin = 3;
}

message MsgForceTransfer {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1;
  string denom = 2;
  string amount = 3;
  string from_address = 4;
  string target_address = 5;
}
