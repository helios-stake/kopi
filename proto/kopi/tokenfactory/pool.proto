syntax = "proto3";
package kopi.tokenfactory;

import "gogoproto/gogo.proto";

option go_package = "github.com/kopi-money/kopi/x/tokenfactory/types";

message LiquidityPool {
  string k_coin = 1;
  uint64 unlock_blocks = 2;

  bytes pool_fee = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  bytes factory_denom_amount = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  bytes k_coin_amount = 5 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message GenesisLiquidityPool {
  string factory_denom = 1;
  string k_coin = 2;
  uint64 unlock_blocks = 3;

  bytes pool_fee = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];

  bytes factory_denom_amount = 5 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  bytes k_coin_amount = 6 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  repeated GenesisProviderShare shares = 7;
}

message ProviderShare {
  bytes share = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message GenesisProviderShare {
  string address = 1;
  bytes share = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}