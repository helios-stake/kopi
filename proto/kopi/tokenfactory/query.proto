syntax = "proto3";
package kopi.tokenfactory;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "kopi/tokenfactory/params.proto";
import "kopi/tokenfactory/denoms.proto";

option go_package = "github.com/kopi-money/kopi/x/tokenfactory/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kopi/tokenfactory/params";
  }

  rpc Denoms (QueryDenomsRequest) returns (QueryDenomsResponse) {
    option (google.api.http).get = "/kopi/tokenfactory/denoms";
  }
}

message QueryDenomsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryDenomsResponse {
  repeated FactoryDenom denoms = 1;
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}